function _defineProperty(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,r=new Array(t);a<t;a++)r[a]=e[a];return r}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,a){return t&&_defineProperties(e.prototype,t),a&&_defineProperties(e,a),Object.defineProperty(e,"prototype",{writable:!1}),e}var startGame=document.getElementById("start-game"),getCard=document.getElementById("get-card"),stay=document.getElementById("stay"),_restart=document.getElementById("restart"),field=document.getElementById("field-container"),playersContainerDIV=document.getElementById("players-container"),gameStatus=document.getElementById("status");_restart.style.display="none",getCard.style.display="none",stay.style.display="none",gameStatus.innerText="";var playersCount=4,Deck=function(){function e(){_classCallCheck(this,e),this.values=[2,3,4,5,6,7,8,9,10,"J","Q","K","A"],this.suits=["♠︎","♣︎","♥︎","♦︎"],this.deck=[]}return _createClass(e,[{key:"createDeck",value:function(){for(var e=0;e<this.suits.length;e++)for(var t=0;t<this.values.length;t++)this.deck=[].concat(_toConsumableArray(this.deck),[{suits:this.suits[e],value:this.values[t],weight:this.getWeight(this.values[t])}])}},{key:"getWeight",value:function(e){switch(e){case"J":case"Q":case"K":return 10;case"A":return 11;default:return e}}},{key:"shuffleDeck",value:function(){var e=this,t=this.deck.map((function(e,t){return{i:t,value:Math.random()}})).sort((function(e,t){return e.value-t.value}));this.deck=t.map((function(t){var a=t.i;return e.deck[a]}))}},{key:"getCard",value:function(){this.deck[this.deck.length-1];return this.deck.pop()}},{key:"reset",value:function(){this.deck=[]}}]),e}(),Game=function(){function e(){var t=this;_classCallCheck(this,e),_defineProperty(this,"getCardListener",(function(){var e=t.deck.getCard();t.players.setCard(e),t.ui.renderCard(t.players),t.check()})),_defineProperty(this,"stayListener",(function(){game.stay()})),this.ui=new UI(playersCount),this.deck=new Deck,this.players=new Players(playersCount)}return _createClass(e,[{key:"init",value:function(){getCard.addEventListener("click",this.getCardListener),stay.addEventListener("click",this.stayListener)}},{key:"startGame",value:function(){this.deck.createDeck(),this.deck.shuffleDeck(),this.players.createPlayer(),this.ui.renderPlayers(),getCard.style.display="flex",stay.style.display="flex"}},{key:"endGame",value:function(){for(var e=0,t=null,a=0;a<this.players.players.length;a++)this.players.players[a].playerPoints>e&&this.players.players[a].playerPoints<=21&&(e=this.players.players[a].playerPoints,t=this.players.players[a]);getCard.style.display="none",stay.style.display="none",gameStatus.innerHTML=t?"winner is: Player ".concat(t.playerId+1):"No winner :(",_restart.style.display="block",this.restart()}},{key:"stay",value:function(){gameStatus.innerHTML=0;try{document.getElementById("player".concat(this.players.activePlayer+1)).classList.remove("active"),this.players.nextPlayer()}catch(e){console.log(e),this.endGame()}}},{key:"check",value:function(){if(this.players.getActivePlayer().playerPoints>21){document.getElementById("player".concat(this.players.activePlayer+1)).classList.remove("active"),gameStatus.innerText=0;try{this.players.nextPlayer()}catch(e){this.endGame()}}}},{key:"restart",value:function(){var e=this;_restart.addEventListener("click",(function(){_restart.style.display="none",startGame.style.display="flex",gameStatus.innerHTML=0,e.players.reset(),e.deck.reset(),document.getElementById("players-container").innerHTML="",getCard.removeEventListener("click",e.getCardListener),stay.removeEventListener("click",e.stayListener)}))}}]),e}(),Players=function(){function e(t){_classCallCheck(this,e),this.playersCount=t,this.activePlayer=0,this.players=[],this.ui=new UI}return _createClass(e,[{key:"createPlayer",value:function(){for(var e=0;e<this.playersCount;e++)this.players.push({playerId:e,playerHand:[],playerPoints:0})}},{key:"setActivePlayer",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.activePlayer=this.players[e].playerId}},{key:"getActivePlayer",value:function(){var e=this;return this.players.find((function(t){return t.playerId===e.activePlayer}))}},{key:"nextPlayer",value:function(){var e=this.activePlayer+1;if(e>this.playersCount)throw new Error("Players end");this.setActivePlayer(e)}},{key:"setCard",value:function(e){this.players[this.activePlayer].playerHand.push({card:e}),this.players[this.activePlayer].playerPoints+=e.weight,gameStatus.innerText=this.players[this.activePlayer].playerPoints}},{key:"reset",value:function(){this.activePlayer=0,this.players=[],this.playersCount=4}}]),e}(),UI=function(){function e(t){_classCallCheck(this,e),this.playerCard=[],this.players=t}return _createClass(e,[{key:"renderPlayer",value:function(e){var t=document.createElement("div");t.classList.add("player"),t.setAttribute("id","player".concat(e)),playersContainerDIV.appendChild(t);var a=document.createElement("h2");a.innerText="Player ".concat(e);var r=document.createElement("div");r.classList.add("p-card-list"),r.setAttribute("id","player".concat(e,"-card-list")),t.appendChild(a);var n=document.getElementById("player".concat(e));n.appendChild(r);var s=document.createElement("p");s.setAttribute("id","player".concat(e,"-total")),s.innerHTML="Total: 0",n.appendChild(s)}},{key:"renderPlayers",value:function(){for(var e=0;e<this.players;e++)this.renderPlayer(e+1)}},{key:"renderCard",value:function(e){var t=e.players[e.activePlayer].playerHand,a=e.activePlayer+1,r=document.getElementById("player".concat(a,"-card-list"));document.getElementById("player".concat(a)).classList.add("active");var n=t.map((function(e){return"<span>".concat(e.card.suits," ").concat(e.card.value,"</span>")}));r.innerHTML=n.map((function(e){return e})).join(" "),document.getElementById("player".concat(a,"-total")).innerHTML="Total: ".concat(e.players[e.activePlayer].playerPoints)}}]),e}(),game=new Game;startGame.addEventListener("click",(function(){startGame.style.display="none",game.startGame(),game.init()}));